{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4384e80587114af0fce1.hot-update.js","sources":["webpack:///./components/loginform.js","webpack:///./components/menu.js","webpack:///./components/verify.js","webpack:///./node_modules/next/dist/lib/dynamic.js","webpack:///./node_modules/next/dynamic.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport { Container, Button, Form, FormGroup, Label, Input, FormText, InputGroup, Col, Row} from 'reactstrap';\r\nimport web3 from '../Ethereum/web3';\r\nimport certificate from '../Ethereum/Contracts/certificateInstance';\r\nimport hash from 'object-hash';\r\nimport Link from 'next/link';\r\n\r\n// import InputGroup from 'react-bootstrap';\r\n// import Button from 'react-bootstrap/lib/Button';\r\n// import FormGroup from 'react-bootstrap/lib/FormGroup';\r\n// import Form from 'react-bootstrap/lib/Form';\r\n// import FormControl from 'react-bootstrap/lib/FormControl';\r\n// const ganache = require('ganache-cli');\r\n// const Web3 = require('web3');\r\n// const web3 = new Web3(ganache.provider());\r\n\r\n\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n// import 'bootstrap/dist/js/bootstrap.js';\r\n// import 'jquery/src/jquery';\r\n// import 'bootstrap';\r\n\r\n// import {FormControl} from 'react-bootstrap';\r\nvar\t x = \"\";\r\nvar pk = \"\";\r\nvar sign = \"\";\r\nclass CertificateForm extends Component{\r\n\r\n\t// static async getInitialProps(){\r\n\t// \tconst accounts = await web3.eth.getAccounts();\r\n\t// \treturn {accounts: accounts};\r\n\t// }\r\n\r\n\tasync componentDidMount(){\r\n\t\tconst accounts = await web3.eth.getAccounts();\r\n\t\tthis.setState({accounts: accounts});\r\n\t}\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlogo: \"\",\r\n\t\t\tcname: \"\",\r\n\t\t\tfname: \"\",\r\n\t\t\tlname: \"\",\r\n\t\t\tdesc: \"\",\r\n\t\t\tdate: \"\",\r\n\t\t\tsign: \"\",\r\n\t\t\ttxHash: \"\",\r\n\t\t\tdone: false\r\n\t\t};\r\n\r\n\t\t\r\n\t}\r\n\r\n\r\n\t// async signAndSend(){\r\n\t// \tvar hashedCert = hash(this.state);\r\n\t// \tconsole.log(\"signing\");\r\n\t// \tconsole.log(hashedCert);\r\n\t// \t// console.log(this.state.accounts[0]);\r\n\t// \tvar signed = await web3.eth.signTypedData(hashedCert, this.state.accounts[0]);\r\n\t// \t// console.log(\"signed\");\r\n\t// \tawait certificate.methods.upload(hashedCert).send({\r\n\t// \t\tfrom: this.state.accounts[0]\r\n\t// \t}).on('transactionHash', function(txHash){\r\n\t// \t\tx = txHash;\r\n\t// \t});\r\n\t\r\n\t// }\r\n\r\n\tasync signAndSend(){\r\n\t\tvar cert = {\r\n\t\t\tlogo: this.state.logo,\r\n\t\t\tsign: this.state.sign,\r\n\t\t\tfname: this.state.fname,\r\n\t\t\tlname: this.state.lname,\r\n\t\t\tdesc: this.state.desc,\r\n\t\t\tdate: this.state.date,\r\n\t\t\tcname: this.state.cname\r\n\t\t}\r\n\t\tvar hashedCert = hash(cert);\r\n\t\tvar fromAccount = this.state.accounts[0];\r\n\t\tvar params = [hashedCert, fromAccount];\r\n  \t\tvar method = 'personal_sign';\r\n\t\t// console.log(this.state.accounts[0]);\r\n\t\t// var signed = await web3.eth.signTypedData(hashedCert, this.state.accounts[0]);\r\n\t\t// console.log(\"signed\");\r\n\t\t// await certificate.methods.upload(hashedCert).send({\r\n\t\t// \tfrom: this.state.accounts[0]\r\n\t\t// }).on('transactionHash', function(txHash){\r\n\t\t// \tx = txHash;\r\n\t\t// \t// alert('transaction successful. ');\r\n\t\t// \tcert.txHash = x;\r\n\t\t// });\r\n\r\n\t\tweb3.currentProvider.sendAsync({\r\n\t\t    method,\r\n\t\t    params,\r\n\t\t    fromAccount,\r\n\t\t  }, function (err, result) {\r\n\t\t    if (err) return console.error(err)\r\n\t\t    if (result.error) return console.error(result.error)\r\n\t\t    console.log('PERSONAL SIGNED:' + JSON.stringify(result.result))\r\n\r\n\t\t    // console.log('recovering...')\r\n\t\t    // const msgParams = { data: msg }\r\n\t\t    // msgParams.sig = result.result\r\n\t\t    // console.dir({ msgParams })\r\n\t\t    // const recovered = sigUtil.recoverPersonalSignature(msgParams)\r\n\t\t    // console.dir({ recovered })\r\n\r\n\t\t    // if (recovered === from ) {\r\n\t\t    //   console.log('SigUtil Successfully verified signer as ' + from)\r\n\t\t    // } else {\r\n\t\t    //   console.dir(recovered)\r\n\t\t    //   console.log('SigUtil Failed to verify signer when comparing ' + recovered.result + ' to ' + from)\r\n\t\t    //   console.log('Failed, comparing %s to %s', recovered, from)\r\n\t\t}\r\n\t\t)\r\n\t\tthis.setState({cert: cert, done: true});\r\n\t}\r\n\r\n\r\n\tasync verify(txHash){\r\n\t\t// console.log(\"hi\");\r\n\t\tvar hashedCert = hash(this.state);\r\n\t\tconsole.log('waiting..');\r\n\t\tvar tx = await web3.eth.getTransaction(x);\r\n\t\tconsole.log('done');\r\n\t\tconsole.log(tx);\r\n\t\tvar functionSignature = web3.eth.abi.encodeFunctionSignature('upload(string)');\r\n\t\t\r\n\t\t// console.log(input.length);\r\n\t\tconsole.log(tx.input);\r\n\t\tconsole.log(typeof (tx.input));\r\n\t\tvar input2 = web3.eth.abi.decodeParameter('string', tx.input.replace(functionSignature, ''));\r\n\t\tconsole.log(hashedCert == input2);\r\n\t\t// console.log(tx);\r\n\t\t// console.log(functionSignature);\r\n\t}\r\n\r\n\trender(){\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t\t\t<Container padding = {10} className = \"block-example border border-dark\">\r\n\t\t\t      <div>\r\n\t\t\t      \t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"/>\r\n\t\t\t      \t\r\n\t\t\t\t\t<Form>\r\n\r\n\t\t\t\t\t<FormGroup row >\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:1, offset:2}}>\r\n\t\t\t\t\t\t<Input  type=\"text\" placeholder=\"logo\" \r\n\t\t\t      \t\tvalue={this.state.logo} onChange={(event) => this.setState({logo: event.target.value})} /><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:0}}>\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"company name\" \r\n\t\t\t      \tvalue={this.state.cname} onChange = {(event) => this.setState({cname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\t\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\r\n\t\t\t      \t<FormGroup >\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{offset:4}}>\r\n\t\t\t      \t<h2>Certificate Of Recognition</h2>\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"first name\" \r\n\t\t\t      \tvalue={this.state.fname} onChange = {(event) => this.setState({fname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:1}} >\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"last name\" \r\n\t\t\t      \tvalue={this.state.lname} onChange = {(event) => this.setState({lname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{size:5, order:5, offset:3}}> \r\n\t\t\t      \t<Input type=\"textarea\" placeholder=\"In recognition for your outstanding academic performance, and your efforts in assisting others to achieve their goals. Your volunteer services for students with learning disabilities has resulted in a rise in their academic performance as well.\" \r\n\t\t\t      \tvalue={this.state.desc} onChange = {(event) => this.setState({desc: event.target.value})}/><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:'auto', offset:2}}>\t\t      \r\n\t\t\t      \t<Input type=\"date\" placeholder=\"date\" \r\n\t\t\t      \tvalue={this.state.date} onChange = {(event) => this.setState({date: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\t\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"signature\" \r\n\t\t\t      \tvalue={this.state.sign} onChange = {(event) => this.setState({sign: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col md = {{size:6, offset:5}}>\r\n\t\t\t      \t<Button size = \"lg\" color=\"primary\" onClick={() => this.signAndSend()}>Submit</Button> <br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\t\t\t      \t</Form>\r\n\r\n\t\t\t      \t\r\n\t\t\t      \t<div>\r\n\t\t\t      \t\t{this.state.done? \r\n\t\t\t      \t<a\r\n\t\t\t\t\t  className=\"pull-right btn btn-success\"\r\n\t\t\t\t\t  style={{ margin: 10 }}\r\n\t\t\t\t\t  href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n\t\t\t\t\t  JSON.stringify(this.state.cert)\r\n\t\t\t\t\t  )}`}\r\n\t\t\t\t\t  download=\"certificate.json\"\r\n\t\t\t\t\t> Download Data as JSON</a>\r\n\t\t\t\t\t: ''}\r\n\t\t\t      \t</div>\r\n\t\t\t      \t\r\n\r\n\t\t\t      \t<div>\r\n\t\t\t\t\t    Click{' '}\r\n\t\t\t\t\t    <Link href=\"./verify\">\r\n\t\t\t\t\t      <a>here</a>\r\n\t\t\t\t\t    </Link>{' '}\r\n\t\t\t\t\t    to read more\r\n\t\t\t\t\t  </div>\r\n\r\n\r\n\t\t\t      </div>\r\n\r\n\t\t\t      \r\n\t\t\t      </Container>\r\n\t\t\t      \r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CertificateForm;\r\n\r\n\r\n\r\n\r\n// 0x60095ea77f093baf7d12372d68c027f272da667414ce11431aa2c73d63b1b0bb","import React, {Component} from 'react';\r\nimport dynamic from 'next/dynamic';\r\n// import DynamicComponent = dynamic(() => import('../components/loginform')\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport { createMemoryHistory } from 'history';\r\nimport { Container, Button, Form, FormGroup, Label, Input, FormText, InputGroup, Col, Row} from 'reactstrap';\r\nimport web3 from '../Ethereum/web3';\r\nimport certificate from '../Ethereum/Contracts/certificateInstance';\r\nimport hash from 'object-hash';\r\nimport Link from 'next/link';\r\nimport Loginform from './loginform';\r\nimport Verify from './verify';\r\nimport Router from 'next/router';\r\n\r\nvar history = createMemoryHistory();\r\n\r\nclass CertMenu extends Component{\r\n\r\n\r\n\tconstuctor() {\r\n  \t\tthis.routeChange = this.routeChange.bind(this);\r\n   \t}\r\n   routeChange(){\r\n    let path = `./loginform.js`;\r\n    this.props.history.push(path);\r\n    }\r\n \r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\" />\r\n\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<FormGroup>\t\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col md = {{size:6, offset:2}}>\r\n\t\t\t      \t<Label></Label>\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:4}}>\r\n\t\t\t\t\t<Label></Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:6}}>\r\n\t\t\t\t\t<Label></Label>\t\t\t     \r\n \t\t\t\t\t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t      \t<Col md = {{size:6, offset:3}}>\r\n\t\t\t      \t<Label></Label>\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:5}}>\r\n\t\t\t\t\t<Label></Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:7}}>\r\n\t\t\t\t\t<Label></Label>\t\t\t     \r\n \t\t\t\t\t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col md = {{size:6, offset:3}}>\r\n\t\t\t      \t<Button size = \"lg\" color=\"info\"onClick={this.routeChange}>Create Certificate</Button> <br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:5}}>\r\n\t\t\t      \t<Button size = \"lg\" color=\"warning\"onClick={this.routeChange}>View Certificate</Button> <br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col md = {{size:6, offset:7}}>\r\n\t\t\t      \t<Button size = \"lg\" color=\"success\" onClick={this.routeChange}>Verify Certificate</Button> <br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default CertMenu;\r\n\r\n\r\n// <BrowserRouter history={history}>\r\n// \t\t\t      <Switch>\r\n// \t\t\t          <Route exact path=\"/\" component={CertMenu} />\r\n// \t\t\t          <Route path=\"/loginform\" component={Loginform} />\r\n// \t\t\t          <Route path=\"/verify\" component={Verify} />\r\n// \t\t\t      </Switch>\r\n// \t\t\t  \t</BrowserRouter>","import React, {Component} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, FormText, InputGroup, Col, Row, Container} from 'reactstrap';\r\nimport web3 from '../Ethereum/web3';\r\nimport certificate from '../Ethereum/Contracts/certificateInstance';\r\nimport hash from 'object-hash';\r\nimport Link from 'next/link';\r\n\r\nvar h = '';\r\nvar tx = {\r\n\tlogo: \"sdfsdf\",\r\n\tcname: \"\",\r\n\tfname: \"\",\r\n\tlname: \"\",\r\n\tdesc: \"\",\r\n\tdate: \"\",\r\n\tsign: \"\"\r\n}\r\n\r\nclass VerifyCert extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttx: {\r\n\t\t\t\tlogo: \"abcd\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetJson(e){\r\n\t\tvar json = e.target.files;\r\n\t\tvar reader = new FileReader();\r\n\t\t reader.readAsDataURL(json[0]);\r\n\t\t reader.addEventListener('load', function(){\r\n\t\t\ttx = JSON.parse(atob(reader.result.substring(29)));\t\t\r\n\t\t\t\r\n\t\t\th = tx.txHash;\r\n\t\t\tdelete tx.txHash ;\r\n\t\t\tconsole.log(typeof tx);\r\n\t\t});\r\n\t}\r\n\r\n\tasync verify(){\r\n\t\tthis.setState({tx});\r\n\t\tconsole.log(typeof tx);\r\n\t\tvar hashedCert = hash(tx);\r\n\t\tvar transaction = await web3.eth.getTransaction(h);\r\n\t\tvar functionSignature = web3.eth.abi.encodeFunctionSignature('upload(string)');\r\n\t\tvar input2 = web3.eth.abi.decodeParameter('string', transaction.input.replace(functionSignature, ''));\r\n\t\tif(hashedCert == input2) alert(\"Verified.\");\r\n\t\telse alert(\"Not verified.\");\r\n\t}\r\n\r\n// \tpersonalSignButton.addEventListener('click', function(event) {\r\n//   event.preventDefault()\r\n//   var text = terms\r\n//   var msg = ethUtil.bufferToHex(new Buffer(text, 'utf8'))\r\n//   // var msg = '0x1' // hexEncode(text)\r\n//   console.log(msg)\r\n//   var from = web3.eth.accounts[0]\r\n//   if (!from) return connect()\r\n\r\n//   /*  web3.personal.sign not yet implemented!!!\r\n//    *  We're going to have to assemble the tx manually!\r\n//    *  This is what it would probably look like, though:\r\n//     web3.personal.sign(msg, from) function (err, result) {\r\n//       if (err) return console.error(err)\r\n//       console.log('PERSONAL SIGNED:' + result)\r\n//     })\r\n//   */\r\n\r\n//    console.log('CLICKED, SENDING PERSONAL SIGN REQ')\r\n//   var params = [msg, from]\r\n//   var method = 'personal_sign'\r\n\r\n  // web3.currentProvider.sendAsync({\r\n  //   method,\r\n  //   params,\r\n  //   from,\r\n  // }, function (err, result) {\r\n  //   if (err) return console.error(err)\r\n  //   if (result.error) return console.error(result.error)\r\n  //   console.log('PERSONAL SIGNED:' + JSON.stringify(result.result))\r\n\r\n  //   console.log('recovering...')\r\n  //   const msgParams = { data: msg }\r\n  //   msgParams.sig = result.result\r\n  //   console.dir({ msgParams })\r\n  //   const recovered = sigUtil.recoverPersonalSignature(msgParams)\r\n  //   console.dir({ recovered })\r\n\r\n  //   if (recovered === from ) {\r\n  //     console.log('SigUtil Successfully verified signer as ' + from)\r\n  //   } else {\r\n  //     console.dir(recovered)\r\n  //     console.log('SigUtil Failed to verify signer when comparing ' + recovered.result + ' to ' + from)\r\n  //     console.log('Failed, comparing %s to %s', recovered, from)\r\n  //   }\r\n\r\n\r\n//     /*\r\n//     method = 'personal_ecRecover'\r\n//     var params = [msg, result.result]\r\n//     web3.currentProvider.sendAsync({\r\n//       method,\r\n//       params,\r\n//       from,\r\n//     }, function (err, recovered) {\r\n//       console.dir({ err, recovered })\r\n//       if (err) return console.error(err)\r\n//       if (result.error) return console.error(result.error)\r\n//       if (result.result === from ) {\r\n//         console.log('Successfully verified signer as ' + from)\r\n//       } else {\r\n//         console.log('Failed to verify signer when comparing ' + result.result + ' to ' + from)\r\n//       }\r\n//     })\r\n//     */\r\n//   })\r\n\r\n// })\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"/>\r\n\t\t\t\r\n\t\t\t<Input type=\"file\" onChange={(e) => this.setJson(e)} >Upload JSON file for verification</Input> <br/>\r\n\t\t\t<Button color=\"success\" onClick={() => this.verify()}>Verify</Button> <br />\r\n\r\n\t\t\t<Container padding = {10} className = \"block-example border border-dark\">\r\n\t\t\t<Form>\r\n\r\n\t\t\t\t\t<FormGroup row >\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:1, offset:2}}>\r\n\t\t\t\t\t\t<Label\r\n\t\t\t      \t\t >{this.state.tx.logo}</Label><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:0}}>\r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.cname}</Label><br />\r\n\t\t\t      \t</Col>\t\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\r\n\t\t\t      \t<FormGroup >\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{offset:4}}>\r\n\t\t\t      \t<h2>Certificate Of Recognition</h2>\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.fname}</Label><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:1}} >\r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.lname}</Label><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{size:5, order:5, offset:3}}> \r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.desc}</Label><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:'auto', offset:2}}>\t\t      \r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.date}</Label><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\t\r\n\t\t\t      \t<Label \r\n\t\t\t      \t>{this.state.tx.sign}</Label><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t\r\n\t\t\t      \r\n\r\n\t\t\t      \t</Form>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default VerifyCert;\r\n\r\n\r\n// <Button onClick={() => this.verify()}> Verify Certificate </Button>","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noSSR = noSSR;\nexports.default = dynamic;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/typeof\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _loadable = _interopRequireDefault(require(\"./loadable\"));\n\nvar isServerSide = typeof window === 'undefined';\n\nfunction noSSR(LoadableInitializer, loadableOptions) {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack;\n  delete loadableOptions.modules; // This check is neccesary to prevent react-loadable from initializing on the server\n\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions);\n  } // This will only be rendered on the server side\n\n\n  return function () {\n    return _react.default.createElement(loadableOptions.loading, {\n      error: null,\n      isLoading: true,\n      pastDelay: false,\n      timedOut: false\n    });\n  };\n}\n\nfunction DefaultLoading() {\n  return _react.default.createElement(\"p\", null, \"loading...\");\n}\n\nfunction dynamic(dynamicOptions, options) {\n  var loadableFn = _loadable.default;\n  var loadableOptions = {\n    // A loading component is not required, so we default it\n    loading: function loading(_ref) {\n      var error = _ref.error,\n          isLoading = _ref.isLoading;\n\n      if (process.env.NODE_ENV === 'development') {\n        if (isLoading) {\n          return _react.default.createElement(DefaultLoading, null);\n        }\n\n        if (error) {\n          return _react.default.createElement(\"p\", null, error.message, _react.default.createElement(\"br\", null), error.stack);\n        }\n      }\n\n      return _react.default.createElement(DefaultLoading, null);\n    } // Support for direct import(), eg: dynamic(import('../hello-world'))\n    // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n    // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n    // To make sure we don't execute the import without rendering first\n\n  };\n\n  if (typeof dynamicOptions.then === 'function') {\n    loadableOptions.loader = function () {\n      return dynamicOptions;\n    }; // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions; // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if ((0, _typeof2.default)(dynamicOptions) === 'object') {\n    loadableOptions = (0, _objectSpread2.default)({}, loadableOptions, dynamicOptions);\n  } // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n\n\n  loadableOptions = (0, _objectSpread2.default)({}, loadableOptions, options); // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n  if (dynamicOptions.render) {\n    loadableOptions.render = function (loaded, props) {\n      return dynamicOptions.render(props, loaded);\n    };\n  } // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n\n  if (dynamicOptions.modules) {\n    loadableFn = _loadable.default.Map;\n    var loadModules = {};\n    var modules = dynamicOptions.modules();\n    (0, _keys.default)(modules).forEach(function (key) {\n      var value = modules[key];\n\n      if (typeof value.then === 'function') {\n        loadModules[key] = function () {\n          return value.then(function (mod) {\n            return mod.default || mod;\n          });\n        };\n\n        return;\n      }\n\n      loadModules[key] = value;\n    });\n    loadableOptions.loader = loadModules;\n  } // coming from build/babel/plugins/react-loadable-plugin.js\n\n\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = (0, _objectSpread2.default)({}, loadableOptions, loadableOptions.loadableGenerated);\n    delete loadableOptions.loadableGenerated;\n  } // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n\n\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr;\n      return noSSR(loadableFn, loadableOptions);\n    }\n\n    delete loadableOptions.ssr;\n  }\n\n  return loadableFn(loadableOptions);\n}","module.exports = require('./dist/lib/dynamic')\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAeA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AA7LA;AACA;AA+LA;;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpIA;;;;;A","sourceRoot":""}