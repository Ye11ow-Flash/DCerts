{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6c95f15182c58a9a749c.hot-update.js","sources":["webpack:///./components/loginform.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport { Container, Button, Form, FormGroup, Label, Input, FormText, InputGroup, Col, Row} from 'reactstrap';\r\nimport web3 from '../Ethereum/web3';\r\nimport certificate from '../Ethereum/Contracts/certificateInstance';\r\nimport hash from 'object-hash';\r\nimport Link from 'next/link';\r\n\r\n// import InputGroup from 'react-bootstrap';\r\n// import Button from 'react-bootstrap/lib/Button';\r\n// import FormGroup from 'react-bootstrap/lib/FormGroup';\r\n// import Form from 'react-bootstrap/lib/Form';\r\n// import FormControl from 'react-bootstrap/lib/FormControl';\r\n// const ganache = require('ganache-cli');\r\n// const Web3 = require('web3');\r\n// const web3 = new Web3(ganache.provider());\r\n\r\n\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n// import 'bootstrap/dist/js/bootstrap.js';\r\n// import 'jquery/src/jquery';\r\n// import 'bootstrap';\r\n\r\n// import {FormControl} from 'react-bootstrap';\r\nvar\t x = \"\";\r\nvar pk = \"\";\r\nvar sign = \"\";\r\nvar cert = {};\r\nclass CertificateForm extends Component{\r\n\r\n\t// static async getInitialProps(){\r\n\t// \tconst accounts = await web3.eth.getAccounts();\r\n\t// \treturn {accounts: accounts};\r\n\t// }\r\n\r\n\tasync componentDidMount(){\r\n\t\tconst accounts = await web3.eth.getAccounts();\r\n\t\tthis.setState({accounts: accounts});\r\n\t}\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlogo: \"\",\r\n\t\t\tcname: \"\",\r\n\t\t\tfname: \"\",\r\n\t\t\tlname: \"\",\r\n\t\t\tdesc: \"\",\r\n\t\t\tdate: \"\",\r\n\t\t\tsign: \"\",\r\n\t\t\ttxHash: \"\",\r\n\t\t\tdone: false,\r\n\t\t\tcert: cert\r\n\t\t};\r\n\r\n\t\t\r\n\t}\r\n\r\n\r\n\t// async signAndSend(){\r\n\t// \tvar hashedCert = hash(this.state);\r\n\t// \tconsole.log(\"signing\");\r\n\t// \tconsole.log(hashedCert);\r\n\t// \t// console.log(this.state.accounts[0]);\r\n\t// \tvar signed = await web3.eth.signTypedData(hashedCert, this.state.accounts[0]);\r\n\t// \t// console.log(\"signed\");\r\n\t\t// await certificate.methods.upload(hashedCert).send({\r\n\t\t// \tfrom: this.state.accounts[0]\r\n\t\t// }).on('transactionHash', function(txHash){\r\n\t\t// \tx = txHash;\r\n\t\t// });\r\n\t\r\n\t// }\r\n\r\n\tasync signAndSend(){\r\n\t\tvar that = this;\r\n\t\tcert = {\r\n\t\t\tlogo: this.state.logo,\r\n\t\t\tsign: this.state.sign,\r\n\t\t\tfname: this.state.fname,\r\n\t\t\tlname: this.state.lname,\r\n\t\t\tdesc: this.state.desc,\r\n\t\t\tdate: this.state.date,\r\n\t\t\tcname: this.state.cname\r\n\t\t}\r\n\t\tvar hashedCert = hash(cert);\r\n\t\tvar fromAccount = this.state.accounts[0];\r\n\t\tvar params = [hashedCert, fromAccount];\r\n  \t\tvar method = 'personal_sign';\r\n\t\t// console.log(this.state.accounts[0]);\r\n\t\t// var signed = await web3.eth.signTypedData(hashedCert, this.state.accounts[0]);\r\n\t\t// console.log(\"signed\");\r\n\t\t// await certificate.methods.upload(hashedCert).send({\r\n\t\t// \tfrom: this.state.accounts[0]\r\n\t\t// }).on('transactionHash', function(txHash){\r\n\t\t// \tx = txHash;\r\n\t\t// \t// alert('transaction successful. ');\r\n\t\t// \tcert.txHash = x;\r\n\t\t// });\r\n\t\tvar signedCert = \"\";\r\n\t\tweb3.currentProvider.sendAsync({\r\n\t\t    method,\r\n\t\t    params,\r\n\t\t    fromAccount,\r\n\t\t  }, async function (err, result) {\r\n\t\t    if (err) return console.error(err)\r\n\t\t    if (result.error) return console.error(result.error)\r\n\t\t    console.log('PERSONAL SIGNED:' + JSON.stringify(result.result))\r\n\t\t\tsignedCert = JSON.stringify(result.result);\r\n\r\n\t\t\tawait certificate.methods.upload(signedCert).send({\r\n\t\t\t\tfrom: fromAccount\r\n\t\t\t}).on('transactionHash', function(txHash){\r\n\t\t\t\tconsole.log(txHash );\r\n\t\t\t\tx = txHash;\r\n\t\t\t\tcert.txHash = x;\r\n\t\t\t\tcert.digitalSignature = signedCert;\r\n\t\t\t\tconsole.log(cert.txHash);\r\n\t\t\t\tthat.setState({cert: cert, done: true});\r\n\t\t\t});\r\n\t\t    // console.log('recovering...')\r\n\t\t    // const msgParams = { data: msg }\r\n\t\t    // msgParams.sig = result.result\r\n\t\t    // console.dir({ msgParams })\r\n\t\t    // const recovered = sigUtil.recoverPersonalSignature(msgParams)\r\n\t\t    // console.dir({ recovered })\r\n\r\n\t\t    // if (recovered === from ) {\r\n\t\t    //   console.log('SigUtil Successfully verified signer as ' + from)\r\n\t\t    // } else {\r\n\t\t    //   console.dir(recovered)\r\n\t\t    //   console.log('SigUtil Failed to verify signer when comparing ' + recovered.result + ' to ' + from)\r\n\t\t    //   console.log('Failed, comparing %s to %s', recovered, from)\r\n\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\tasync verify(txHash){\r\n\t\t// console.log(\"hi\");\r\n\t\tvar hashedCert = hash(this.state);\r\n\t\tconsole.log('waiting..');\r\n\t\tvar tx = await web3.eth.getTransaction(x);\r\n\t\tconsole.log('done');\r\n\t\tconsole.log(tx);\r\n\t\tvar functionSignature = web3.eth.abi.encodeFunctionSignature('upload(string)');\r\n\t\t\r\n\t\t// console.log(input.length);\r\n\t\tconsole.log(tx.input);\r\n\t\tconsole.log(typeof (tx.input));\r\n\t\tvar input2 = web3.eth.abi.decodeParameter('string', tx.input.replace(functionSignature, ''));\r\n\t\tconsole.log(hashedCert == input2);\r\n\t\t// console.log(tx);\r\n\t\t// console.log(functionSignature);\r\n\t}\r\n\r\n\trender(){\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t\t\t<Container padding = {10} className = \"block-example border border-dark\">\r\n\t\t\t      <div>\r\n\t\t\t      \t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"/>\r\n\t\t\t      \t\r\n\t\t\t\t\t<Form>\r\n\r\n\t\t\t\t\t<FormGroup row >\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:1, offset:2}}>\r\n\t\t\t\t\t\t<Input  type=\"text\" placeholder=\"logo\" \r\n\t\t\t      \t\tvalue={this.state.logo} onChange={(event) => this.setState({logo: event.target.value})} /><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:0}}>\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"company name\" \r\n\t\t\t      \tvalue={this.state.cname} onChange = {(event) => this.setState({cname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\t\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\r\n\t\t\t      \t<FormGroup >\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{offset:4}}>\r\n\t\t\t      \t<h2>Certificate Of Recognition</h2>\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"first name\" \r\n\t\t\t      \tvalue={this.state.fname} onChange = {(event) => this.setState({fname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:1}} >\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"last name\" \r\n\t\t\t      \tvalue={this.state.lname} onChange = {(event) => this.setState({lname: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col sm = {{size:5, order:5, offset:3}}> \r\n\t\t\t      \t<Input type=\"textarea\" placeholder=\"In recognition for your outstanding academic performance, and your efforts in assisting others to achieve their goals. Your volunteer services for students with learning disabilities has resulted in a rise in their academic performance as well.\" \r\n\t\t\t      \tvalue={this.state.desc} onChange = {(event) => this.setState({desc: event.target.value})}/><br />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t<Col  sm = {{size:'auto', offset:2}}>\t\t      \r\n\t\t\t      \t<Input type=\"date\" placeholder=\"date\" \r\n\t\t\t      \tvalue={this.state.date} onChange = {(event) => this.setState({date: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t<Col  sm = {{size:'auto', offset:3}}>\t\r\n\t\t\t      \t<Input type=\"text\" placeholder=\"signature\" \r\n\t\t\t      \tvalue={this.state.sign} onChange = {(event) => this.setState({sign: event.target.value})}/><br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\r\n\t\t\t      \t<FormGroup>\r\n\t\t\t      \t<Row>\r\n\t\t\t      \t<Col md = {{size:6, offset:5}}>\r\n\t\t\t      \t<Button size = \"lg\" color=\"primary\" onClick={() => this.signAndSend()}>Submit</Button> <br />\r\n\t\t\t      \t</Col>\r\n\t\t\t      \t</Row>\r\n\t\t\t      \t</FormGroup>\r\n\t\t\t      \t</Form>\r\n\r\n\t\t\t      \t\r\n\t\t\t      \t<div>\r\n\t\t\t      \t\t{this.state.done? \r\n\t\t\t      \t<a\r\n\t\t\t\t\t  className=\"pull-right btn btn-success\"\r\n\t\t\t\t\t  style={{ margin: 10 }}\r\n\t\t\t\t\t  href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n\t\t\t\t\t  JSON.stringify(cert)\r\n\t\t\t\t\t  )}`}\r\n\t\t\t\t\t  download=\"certificate.json\"\r\n\t\t\t\t\t> Download Data as JSON</a>\r\n\t\t\t\t\t: ''}\r\n\t\t\t      \t</div>\r\n\t\t\t      \t\r\n\r\n\t\t\t      \t<div>\r\n\t\t\t\t\t    Click{' '}\r\n\t\t\t\t\t    <Link href=\"./verify\">\r\n\t\t\t\t\t      <a>here</a>\r\n\t\t\t\t\t    </Link>{' '}\r\n\t\t\t\t\t    to read more\r\n\t\t\t\t\t  </div>\r\n\r\n\r\n\t\t\t      </div>\r\n\r\n\t\t\t      \r\n\t\t\t      </Container>\r\n\t\t\t      \r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CertificateForm;\r\n\r\n\r\n\r\n\r\n// 0x60095ea77f093baf7d12372d68c027f272da667414ce11431aa2c73d63b1b0bb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAgBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAOA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AAxPA;AACA;AA0PA;;;;A","sourceRoot":""}